var searchIndex = JSON.parse('{\
"encoding":{"doc":"Encoding","t":[8,13,13,3,4,6,4,6,8,6,13,13,13,8,8,13,13,13,13,8,0,11,11,11,11,11,11,11,11,12,11,11,11,11,0,5,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,0,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,10,10,10,10,11,11,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,0,17,17,17,0,0,0,0,0,0,0,0,0,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,5,5,5,8,13,13,3,4,6,4,6,8,6,13,13,13,8,8,13,13,13,13,8,11,11,12,2,11,11,11,11,10,10,11,11,10,10,10,10,10,10,10,12,11,10,10,10,10,11,11,12,12],"n":["ByteWriter","Call","Call","CodecError","DecoderTrap","DecoderTrapFunc","EncoderTrap","EncoderTrapFunc","Encoding","EncodingRef","Ignore","Ignore","NcrEscape","RawDecoder","RawEncoder","Replace","Replace","Strict","Strict","StringWriter","all","as_mut_string","as_mut_vec","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","codec","decode","decode","decode_to","encode","encode_to","fmt","from","from","from","from_self","from_self","into","into","into","is_ascii_compatible","is_ascii_compatible","label","name","raw_decoder","raw_encoder","raw_feed","raw_feed","raw_finish","raw_finish","to_owned","to_owned","trap","trap","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","types","upto","whatwg_name","write_byte","write_bytes","write_char","write_str","writer_hint","writer_hint","0","0","ARMSCII_8","ASCII","BIG5_2003","CP437","ERROR","EUC_JP","GB18030","GBK","HZ","IBM866","ISO_2022_JP","ISO_8859_1","ISO_8859_10","ISO_8859_13","ISO_8859_14","ISO_8859_15","ISO_8859_16","ISO_8859_2","ISO_8859_3","ISO_8859_4","ISO_8859_5","ISO_8859_6","ISO_8859_7","ISO_8859_8","KOI8_R","KOI8_U","MAC_CYRILLIC","MAC_ROMAN","UTF_16BE","UTF_16LE","UTF_8","WINDOWS_1250","WINDOWS_1251","WINDOWS_1252","WINDOWS_1253","WINDOWS_1254","WINDOWS_1255","WINDOWS_1256","WINDOWS_1257","WINDOWS_1258","WINDOWS_31J","WINDOWS_874","WINDOWS_949","encodings","whatwg","ISO_8859_8_I","REPLACEMENT","X_USER_DEFINED","ascii","error","japanese","korean","simpchinese","singlebyte","tradchinese","utf_16","utf_8","whatwg","ASCIIDecoder","ASCIIEncoder","ASCIIEncoding","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","from","from","from","from_self","from_self","into","into","into","is_ascii_compatible","is_ascii_compatible","name","new","new","raw_decoder","raw_encoder","raw_feed","raw_feed","raw_finish","raw_finish","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ErrorDecoder","ErrorEncoder","ErrorEncoding","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","from","from","from","from_self","from_self","into","into","into","name","new","new","raw_decoder","raw_encoder","raw_feed","raw_feed","raw_finish","raw_finish","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","EUCJPEncoder","EUCJPEncoding","ISO2022JPEncoder","ISO2022JPEncoding","Windows31JEncoder","Windows31JEncoding","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","from","from","from","from","from","from","from_self","from_self","from_self","into","into","into","into","into","into","is_ascii_compatible","is_ascii_compatible","is_ascii_compatible","name","name","name","new","new","new","raw_decoder","raw_decoder","raw_decoder","raw_encoder","raw_encoder","raw_encoder","raw_feed","raw_feed","raw_feed","raw_finish","raw_finish","raw_finish","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","whatwg_name","whatwg_name","whatwg_name","Windows949Encoder","Windows949Encoding","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","from_self","into","into","is_ascii_compatible","name","new","raw_decoder","raw_encoder","raw_feed","raw_finish","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","whatwg_name","GB18030Encoder","GB18030Encoding","GBKEncoder","GBKEncoding","HZEncoder","HZEncoding","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","from","from","from","from","from","from","from_self","from_self","from_self","into","into","into","into","into","into","is_ascii_compatible","is_ascii_compatible","is_ascii_compatible","name","name","name","new","new","new","raw_decoder","raw_decoder","raw_decoder","raw_encoder","raw_encoder","raw_encoder","raw_feed","raw_feed","raw_feed","raw_finish","raw_finish","raw_finish","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","whatwg_name","whatwg_name","whatwg_name","SingleByteDecoder","SingleByteEncoder","SingleByteEncoding","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","from","from","from","from_self","from_self","index_backward","index_forward","into","into","into","is_ascii_compatible","is_ascii_compatible","iso_8859_1","name","name","new","new","raw_decoder","raw_encoder","raw_feed","raw_feed","raw_finish","raw_finish","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","whatwg_name","whatwg_name","backward","forward","BigFive2003Encoder","BigFive2003Encoding","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","from_self","into","into","is_ascii_compatible","name","new","raw_decoder","raw_encoder","raw_feed","raw_finish","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","whatwg_name","UTF16BEEncoder","UTF16BEEncoding","UTF16LEEncoder","UTF16LEEncoding","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","from","from","from","from","from_self","from_self","into","into","into","into","name","name","raw_decoder","raw_decoder","raw_encoder","raw_encoder","raw_feed","raw_feed","raw_finish","raw_finish","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","whatwg_name","whatwg_name","UTF8Decoder","UTF8Encoder","UTF8Encoding","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","from","from","from","from_self","from_self","from_utf8","into","into","into","is_ascii_compatible","is_ascii_compatible","name","new","new","raw_decoder","raw_encoder","raw_feed","raw_feed","raw_finish","raw_finish","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","whatwg_name","EncoderOnlyUTF8Encoding","borrow","borrow_mut","clone","clone_into","from","into","name","raw_decoder","raw_encoder","to_owned","try_from","try_into","type_id","whatwg_name","x_user_defined","backward","forward","encoding_from_whatwg_label","encoding_from_windows_code_page","ByteWriter","Call","Call","CodecError","DecoderTrap","DecoderTrapFunc","EncoderTrap","EncoderTrapFunc","Encoding","EncodingRef","Ignore","Ignore","NcrEscape","RawDecoder","RawEncoder","Replace","Replace","Strict","Strict","StringWriter","as_mut_string","as_mut_vec","cause","decode","decode","decode_to","encode","encode_to","from_self","from_self","is_ascii_compatible","is_ascii_compatible","name","raw_decoder","raw_encoder","raw_feed","raw_feed","raw_finish","raw_finish","upto","whatwg_name","write_byte","write_bytes","write_char","write_str","writer_hint","writer_hint","0","0"],"q":["encoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encoding::DecoderTrap","encoding::EncoderTrap","encoding::all","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encoding::all::whatwg","","","encoding::codec","","","","","","","","","","encoding::codec::ascii","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encoding::codec::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encoding::codec::japanese","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encoding::codec::korean","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encoding::codec::simpchinese","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encoding::codec::singlebyte","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encoding::codec::singlebyte::iso_8859_1","","encoding::codec::tradchinese","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encoding::codec::utf_16","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encoding::codec::utf_8","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encoding::codec::whatwg","","","","","","","","","","","","","","","","encoding::codec::whatwg::x_user_defined","","encoding::label","","encoding::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encoding::types::DecoderTrap","encoding::types::EncoderTrap"],"d":["Byte writer used by encoders. In most cases this will be …","Calls given function to handle decoder errors. The …","Calls given function to handle encoder errors. The …","Error information from either encoder or decoder.","Trap, which handles decoder errors.","A type of the bare function in <code>DecoderTrap</code> values.","","A type of the bare function in <code>EncoderTrap</code> values.","Character encoding.","A trait object using dynamic dispatch which is a sendable …","Silently ignores an error, effectively replacing it with …","Silently ignores an error, effectively replacing it with …","Replaces an error with XML numeric character references …","Decoder converting a byte sequence into a Unicode string. …","Encoder converting a Unicode string into a byte sequence. …","Replaces an error with a U+FFFD (decoder). Corresponds to …","Replaces an error with <code>?</code> in given encoding. Note that this …","Immediately fails on errors. Corresponds to WHATWG “fatal…","Immediately fails on errors. Corresponds to WHATWG “fatal…","String writer used by decoders. In most cases this will be …","A list of all supported encodings. Useful for encodings …","If this <code>StringWriter</code> is a <code>String</code>, returns a mutable …","If this <code>ByteWriter</code> is a <code>Vec&lt;u8&gt;</code>, returns a mutable …","","","","","","","A human-readable cause of the error.","","","","","Codec implementations.","Determine the encoding by looking for a Byte Order Mark …","An easy-to-use interface to <code>RawDecoder</code>. On the decoder …","Decode into a <code>StringWriter</code>.","An easy-to-use interface to <code>RawEncoder</code>. On the encoder …","Encode into a <code>dyn ByteWriter</code>.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a fresh <code>RawEncoder</code> instance which parameters are …","Creates a fresh <code>RawDecoder</code> instance which parameters are …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if this encoding is compatible to ASCII, i.e. …","Returns true if this encoding is compatible to ASCII, i.e. …","An interface for retrieving an encoding (or a set of …","Returns the canonical name of given encoding. This name is …","Creates a new decoder.","Creates a new encoder.","Feeds given portion of string to the encoder, pushes the …","Feeds given portion of byte sequence to the encoder, …","Finishes the encoder, pushes the an encoded byte sequence …","Finishes the decoder, pushes the a decoded string at the …","","","Handles a decoder error. May write to the output writer. …","Handles an encoder error. May write to the output writer. …","","","","","","","","","","Reexports of types from encoding-types crate.","The byte position of the first remaining byte, with …","Returns a name of given encoding defined in the WHATWG …","Writes a single byte.","Writes a number of bytes.","Writes a single character.","Writes a string.","Hints an expected lower bound on the length (in bytes) of …","Hints an expected lower bound on the length (in bytes) of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a list of references to the encodings available.","","","","","7-bit ASCII encoding.","A placeholder encoding that returns encoder/decoder error …","Legacy Japanese encodings based on JIS X 0208 and JIS X …","Legacy Korean encodings based on KS X 1001.","Legacy simplified Chinese encodings based on GB 2312 and …","Common codec implementation for single-byte encodings.","Legacy traditional Chinese encodings.","UTF-16.","UTF-8, the universal encoding.","Asymmetric or special encoding constructions required by …","A decoder for ASCII.","An encoder for ASCII.","ASCII, also known as ISO/IEC 646:US.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","A decoder that always returns error.","An encoder that always returns error.","An encoding that returns encoder/decoder error for every …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","An encoder for EUC-JP with unused G3 character set.","EUC-JP. (XXX with asymmetric JIS X 0212 support)","An encoder for ISO-2022-JP without JIS X 0212/0213 support.","ISO-2022-JP.","An encoder for Shift_JIS with IBM/NEC extensions.","Windows code page 932, i.e. Shift_JIS with IBM/NEC …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An encoder for Windows code page 949.","Windows code page 949.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","An encoder for GB 18030.","GB 18030.","An encoder for GBK.","GBK, as a subset of GB 18030.","An encoder for HZ.","HZ. (RFC 1843)","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A decoder for single-byte encodings based on ASCII.","An encoder for single-byte encodings based on ASCII.","A common framework for single-byte encodings based on …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Algorithmic mapping for ISO 8859-1.","","","","","","","","","","","","","","","","","","","","","","","","","","","An encoder for Big5-2003.","Big5-2003 with common extensions. (XXX with asymmetric …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","An encoder for UTF-16 in big endian.","UTF-16 (UCS Transformation Format, 16-bit), in big endian.","An encoder for UTF-16 in little endian.","UTF-16 (UCS Transformation Format, 16-bit), in little …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A decoder for UTF-8.","An encoder for UTF-8.","UTF-8 (UCS Transformation Format, 8-bit).","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Almost equivalent to <code>std::str::from_utf8</code>. This function is …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Replacement encoding used to solve a particular attack …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Algorithmic mapping for <code>x-user-defined</code> encoding.","","","Returns an encoding from given label, defined in the …","Returns an encoding from Windows code page number. …","Byte writer used by encoders. In most cases this will be …","Calls given function to handle decoder errors. The …","Calls given function to handle encoder errors. The …","Error information from either encoder or decoder.","Trap, which handles decoder errors.","A type of the bare function in <code>DecoderTrap</code> values.","","A type of the bare function in <code>EncoderTrap</code> values.","Character encoding.","A trait object using dynamic dispatch which is a sendable …","Silently ignores an error, effectively replacing it with …","Silently ignores an error, effectively replacing it with …","Replaces an error with XML numeric character references …","Decoder converting a byte sequence into a Unicode string. …","Encoder converting a Unicode string into a byte sequence. …","Replaces an error with a U+FFFD (decoder). Corresponds to …","Replaces an error with <code>?</code> in given encoding. Note that this …","Immediately fails on errors. Corresponds to WHATWG “fatal…","Immediately fails on errors. Corresponds to WHATWG “fatal…","String writer used by decoders. In most cases this will be …","If this <code>StringWriter</code> is a <code>String</code>, returns a mutable …","If this <code>ByteWriter</code> is a <code>Vec&lt;u8&gt;</code>, returns a mutable …","A human-readable cause of the error.","","An easy-to-use interface to <code>RawDecoder</code>. On the decoder …","Decode into a <code>StringWriter</code>.","An easy-to-use interface to <code>RawEncoder</code>. On the encoder …","Encode into a <code>dyn ByteWriter</code>.","Creates a fresh <code>RawEncoder</code> instance which parameters are …","Creates a fresh <code>RawDecoder</code> instance which parameters are …","Returns true if this encoding is compatible to ASCII, i.e. …","Returns true if this encoding is compatible to ASCII, i.e. …","Returns the canonical name of given encoding. This name is …","Creates a new decoder.","Creates a new encoder.","Feeds given portion of string to the encoder, pushes the …","Feeds given portion of byte sequence to the encoder, …","Finishes the encoder, pushes the an encoded byte sequence …","Finishes the decoder, pushes the a decoded string at the …","The byte position of the first remaining byte, with …","Returns a name of given encoding defined in the WHATWG …","Writes a single byte.","Writes a number of bytes.","Writes a single character.","Writes a string.","Hints an expected lower bound on the length (in bytes) of …","Hints an expected lower bound on the length (in bytes) of …","",""],"i":[0,4,5,0,0,0,0,0,0,0,4,5,5,0,0,4,5,4,5,0,0,10,13,21,4,5,21,4,5,21,4,5,4,5,0,0,14,14,14,14,14,21,4,5,17,19,21,4,5,17,19,0,14,14,14,17,19,17,19,4,5,4,5,21,4,5,21,4,5,21,4,5,0,21,14,13,13,10,10,13,10,60,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,26,27,25,26,27,25,26,27,25,26,27,25,26,27,26,27,25,26,27,26,27,25,26,27,25,25,26,27,26,27,25,26,27,25,26,27,25,26,27,25,26,27,0,0,0,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,29,30,28,29,30,28,29,30,28,28,29,30,29,30,28,29,30,28,29,30,28,29,30,28,29,30,0,0,0,0,0,0,31,32,33,34,35,36,31,32,33,34,35,36,31,32,33,34,35,36,31,32,33,34,35,36,31,32,33,34,35,36,32,34,36,31,32,33,34,35,36,32,34,36,31,33,35,32,34,36,31,33,35,31,33,35,32,34,36,32,34,36,31,32,33,34,35,36,31,32,33,34,35,36,31,32,33,34,35,36,31,32,33,34,35,36,31,33,35,0,0,37,38,37,38,37,38,37,38,37,38,38,37,38,38,37,38,37,37,38,38,37,38,37,38,37,38,37,38,37,0,0,0,0,0,0,39,40,41,42,43,44,39,40,41,42,43,44,39,40,41,42,43,44,39,40,41,42,43,44,39,40,41,42,43,44,40,42,44,39,40,41,42,43,44,40,42,44,39,41,43,40,42,44,39,41,43,39,41,43,40,42,44,40,42,44,39,40,41,42,43,44,39,40,41,42,43,44,39,40,41,42,43,44,39,40,41,42,43,44,39,41,43,0,0,0,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,46,47,45,45,45,46,47,46,47,0,45,45,46,47,45,45,46,47,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,45,0,0,0,0,50,51,50,51,50,51,50,51,50,51,51,50,51,51,50,51,50,50,51,51,50,51,50,51,50,51,50,51,50,0,0,0,0,52,53,54,55,52,53,54,55,52,53,54,55,52,53,54,55,52,53,54,55,54,55,52,53,54,55,52,53,52,53,52,53,54,55,54,55,52,53,54,55,52,53,54,55,52,53,54,55,52,53,54,55,52,53,0,0,0,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,57,58,0,56,57,58,57,58,56,57,58,56,56,57,58,57,58,56,57,58,56,57,58,56,57,58,56,57,58,56,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,0,0,0,0,0,4,5,0,0,0,0,0,0,0,4,5,5,0,0,4,5,4,5,0,10,13,21,0,14,14,14,14,17,19,17,19,14,14,14,17,19,17,19,21,14,13,13,10,10,13,10,60,61],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],[[],[[2,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,4],[5,5],[[]],[[]],0,[[4,6]],[4,[[9,[1,[8,[7]]]]]],[[4,10],[[9,[[8,[7]]]]]],[[7,5],[[9,[[3,[11,12]],[8,[7]]]]]],[[7,5,13],[[9,[[8,[7]]]]]],[[14,15],[[9,[16]]]],[[]],[[]],[[]],[[],[[18,[17,12]]]],[[],[[18,[19,12]]]],[[]],[[]],[[]],[[],20],[[],20],0,[[],7],[[],[[18,[19,12]]]],[[],[[18,[17,12]]]],[[7,13]],[10],[13,[[2,[21]]]],[10,[[2,[21]]]],[[]],[[]],[[4,19,10],20],[[5,17,7,13],20],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],22],[[],22],[[],22],0,0,[[],[[2,[7]]]],[11],[[]],[23],[7],[24],[24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[25,25],[26,26],[27,27],[[]],[[]],[[]],[[]],[[]],[[]],[26,[[18,[17]]]],[27,[[18,[19]]]],[[]],[[]],[[]],[26,20],[27,20],[25,7],[[],[[18,[17]]]],[[],[[18,[19]]]],[25,[[18,[19]]]],[25,[[18,[17]]]],[[26,7,13]],[[27,10]],[[26,13],[[2,[21]]]],[[27,10],[[2,[21]]]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],22],[[],22],[[],22],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[29,29],[30,30],[[]],[[]],[[]],[[]],[[]],[[]],[29,[[18,[17]]]],[30,[[18,[19]]]],[[]],[[]],[[]],[28,7],[[],[[18,[17]]]],[[],[[18,[19]]]],[28,[[18,[19]]]],[28,[[18,[17]]]],[[29,7,13]],[[30,10]],[[29,13],[[2,[21]]]],[[30,10],[[2,[21]]]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],22],[[],22],[[],22],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,[[18,[17]]]],[34,[[18,[17]]]],[36,[[18,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[32,20],[34,20],[36,20],[31,7],[33,7],[35,7],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[31,[[18,[19]]]],[33,[[18,[19]]]],[35,[[18,[19]]]],[31,[[18,[17]]]],[33,[[18,[17]]]],[35,[[18,[17]]]],[[32,7,13]],[[34,7,13]],[[36,7,13]],[[32,13],[[2,[21]]]],[[34,13],[[2,[21]]]],[[36,13],[[2,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[31,[[2,[7]]]],[33,[[2,[7]]]],[35,[[2,[7]]]],0,0,[[]],[[]],[[]],[[]],[37,37],[38,38],[[]],[[]],[[]],[[]],[38,[[18,[17]]]],[[]],[[]],[38,20],[37,7],[[],[[18,[17]]]],[37,[[18,[19]]]],[37,[[18,[17]]]],[[38,7,13]],[[38,13],[[2,[21]]]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],22],[[],22],[37,[[2,[7]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,[[18,[17]]]],[42,[[18,[17]]]],[44,[[18,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[40,20],[42,20],[44,20],[39,7],[41,7],[43,7],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[39,[[18,[19]]]],[41,[[18,[19]]]],[43,[[18,[19]]]],[39,[[18,[17]]]],[41,[[18,[17]]]],[43,[[18,[17]]]],[[40,7,13]],[[42,7,13]],[[44,7,13]],[[40,13],[[2,[21]]]],[[42,13],[[2,[21]]]],[[44,13],[[2,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[39,[[2,[7]]]],[41,[[2,[7]]]],[43,[[2,[7]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[45,45],[46,46],[47,47],[[]],[[]],[[]],[[]],[[]],[[]],[46,[[18,[17]]]],[47,[[18,[19]]]],0,0,[[]],[[]],[[]],[46,20],[47,20],0,[45,7],0,[[],[[18,[17]]]],[[],[[18,[19]]]],[45,[[18,[19]]]],[45,[[18,[17]]]],[[46,7,13]],[[47,10]],[[46,13],[[2,[21]]]],[[47,10],[[2,[21]]]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],22],[[],22],[[],22],[45,[[2,[7]]]],0,[48,11],[11,49],0,0,[[]],[[]],[[]],[[]],[50,50],[51,51],[[]],[[]],[[]],[[]],[51,[[18,[17]]]],[[]],[[]],[51,20],[50,7],[[],[[18,[17]]]],[50,[[18,[19]]]],[50,[[18,[17]]]],[[51,7,13]],[[51,13],[[2,[21]]]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],22],[[],22],[50,[[2,[7]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,52],[53,53],[54,54],[55,55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,[[18,[17]]]],[55,[[18,[17]]]],[[]],[[]],[[]],[[]],[52,7],[53,7],[52,[[18,[19]]]],[53,[[18,[19]]]],[52,[[18,[17]]]],[53,[[18,[17]]]],[[54,7,13]],[[55,7,13]],[[54,13],[[2,[21]]]],[[55,13],[[2,[21]]]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],22],[[],22],[[],22],[[],22],[52,[[2,[7]]]],[53,[[2,[7]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[56,56],[57,57],[58,58],[[]],[[]],[[]],[[]],[[]],[[]],[57,[[18,[17]]]],[58,[[18,[19]]]],[[],[[2,[7]]]],[[]],[[]],[[]],[57,20],[58,20],[56,7],[[],[[18,[17]]]],[[],[[18,[19]]]],[56,[[18,[19]]]],[56,[[18,[17]]]],[[57,7,13]],[[58,10]],[[57,13],[[2,[21]]]],[[58,10],[[2,[21]]]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],22],[[],22],[[],22],[56,[[2,[7]]]],0,[[]],[[]],[59,59],[[]],[[]],[[]],[59,7],[59,[[18,[19]]]],[59,[[18,[17]]]],[[]],[[],9],[[],9],[[],22],[59,[[2,[7]]]],0,[48,11],[11,49],[7,[[2,[6]]]],[24,[[2,[6]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],[[],[[2,[3]]]],0,0,[4,[[9,[1,[8,[7]]]]]],[[4,10],[[9,[[8,[7]]]]]],[[7,5],[[9,[[3,[11,12]],[8,[7]]]]]],[[7,5,13],[[9,[[8,[7]]]]]],[[],[[18,[17,12]]]],[[],[[18,[19,12]]]],[[],20],[[],20],[[],7],[[],[[18,[19,12]]]],[[],[[18,[17,12]]]],[[7,13]],[10],[13,[[2,[21]]]],[10,[[2,[21]]]],0,[[],[[2,[7]]]],[11],[[]],[23],[7],[24],[24],0,0],"p":[[3,"String"],[4,"Option"],[3,"Vec"],[4,"DecoderTrap"],[4,"EncoderTrap"],[6,"EncodingRef"],[15,"str"],[4,"Cow"],[4,"Result"],[8,"StringWriter"],[15,"u8"],[3,"Global"],[8,"ByteWriter"],[8,"Encoding"],[3,"Formatter"],[3,"Error"],[8,"RawEncoder"],[3,"Box"],[8,"RawDecoder"],[15,"bool"],[3,"CodecError"],[3,"TypeId"],[15,"char"],[15,"usize"],[3,"ASCIIEncoding"],[3,"ASCIIEncoder"],[3,"ASCIIDecoder"],[3,"ErrorEncoding"],[3,"ErrorEncoder"],[3,"ErrorDecoder"],[3,"EUCJPEncoding"],[3,"EUCJPEncoder"],[3,"Windows31JEncoding"],[3,"Windows31JEncoder"],[3,"ISO2022JPEncoding"],[3,"ISO2022JPEncoder"],[3,"Windows949Encoding"],[3,"Windows949Encoder"],[3,"GB18030Encoding"],[3,"GB18030Encoder"],[3,"GBKEncoding"],[3,"GBKEncoder"],[3,"HZEncoding"],[3,"HZEncoder"],[3,"SingleByteEncoding"],[3,"SingleByteEncoder"],[3,"SingleByteDecoder"],[15,"u32"],[15,"u16"],[3,"BigFive2003Encoding"],[3,"BigFive2003Encoder"],[3,"UTF16LEEncoding"],[3,"UTF16BEEncoding"],[3,"UTF16LEEncoder"],[3,"UTF16BEEncoder"],[3,"UTF8Encoding"],[3,"UTF8Encoder"],[3,"UTF8Decoder"],[3,"EncoderOnlyUTF8Encoding"],[13,"Call"],[13,"Call"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
