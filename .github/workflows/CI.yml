name: Rust

on:
    push:
        branches: [master]
        paths-ignore:
            - "README.md"
            - ".gitignore"
            - ".git-blame-ignore-revs"
            - "AUTHORS.txt"
    pull_request:
        branches: [master]
        paths-ignore:
            - "README.md"
            - ".gitignore"
            - ".git-blame-ignore-revs"
            - "AUTHORS.txt"

env:
    CARGO_TERM_COLOR: always

jobs:
    check:
        name: Check
        runs-on: ubuntu-latest
        env:
            RUSTFLAGS: -Dwarnings
        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: true

            - name: Install Rust (stable)
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true

            - name: Cargo check
              uses: actions-rs/cargo@v1
              with:
                  command: check
                  args: --all-features

    test:
        name: Test
        runs-on: ${{ matrix.config.os }}
        needs: check
        strategy:
            fail-fast: false
            matrix:
                config:
                    #- { os: "ubuntu-latest", toolchain: "stable" }
                    #- { os: "ubuntu-latest", toolchain: "beta" }
                    - { os: "ubuntu-latest", toolchain: "nightly" }
                    - { os: "windows-2016", toolchain: "nightly" }
                    - { os: "macOS-latest", toolchain: "nightly" }
        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: true

            - name: Install ${{ matrix.config.toolchain }} toolchain
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: ${{ matrix.config.toolchain }}
                  override: true
                  components: rustfmt

            - name: Cargo build
              uses: actions-rs/cargo@v1
              #continue-on-error: ${{ matrix.config.toolchain == 'nightly' }}
              with:
                  command: build
                  args: --all-features

            - name: Cargo test
              uses: actions-rs/cargo@v1
              #continue-on-error: ${{ matrix.config.toolchain == 'nightly' }}
              with:
                  command: test
                  args: --all-features -- --nocapture

    style:
        name: Check Style
        runs-on: ubuntu-latest
        needs: check
        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: true

            - name: Install stable toolchain
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true
                  components: clippy, rustfmt

            - name: Run cargo fmt
              uses: actions-rs/cargo@v1
              with:
                  command: fmt
                  args: --all -- --check

            - name: Run cargo clippy
              uses: actions-rs/clippy-check@v1
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  args: --all-features

    coverage:
        name: Report coverage
        runs-on: ubuntu-latest
        needs: test

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Install nightly toolchain
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: nightly
                  override: true

            - name: Install llvm tools
              run: rustup component add llvm-tools-preview
              shell: bash

            - name: Install grcov
              run: curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf -
              shell: bash

            - name: Make executeable
              run: chmod +x ./calculate-coverage.sh

            - name: Disable benchmarks
              run: find -iname '*.rs' -exec sed -i -- 's/#\[bench\]/\/\/#\[bench\]/' {} +
              shell: bash

            - name: Build, Instrument, Test
              env:
                  LLVM_PROFILE_FILE: target/debug/coverage/%p-%m.profraw
                  CARGO_INCREMENTAL: 0
                  RUSTFLAGS: -Zinstrument-coverage -Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort
                  RUSTDOCFLAGS: -Cpanic=abort
              run: ./calculate-coverage.sh

            - name: Upload coverage
              uses: codecov/codecov-action@v2
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  files: ./target/debug/coverage/lcov.info
                  flags: rusttests
                  name: Cargo Tests
                  fail_ci_if_error: true
